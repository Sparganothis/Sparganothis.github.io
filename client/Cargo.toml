[package]
name = "client"
version = "0.1.37"
edition = "2021"

[profile.dev]
opt-level = 1
[profile.dev.package."*"]
opt-level = 3

[profile.dev.build-override]
opt-level = 3
codegen-units = 16
debug = false # when possible

[profile.release]
opt-level = "z"
lto = "fat"
debug = 0
strip = true
codegen-units = 1


[dependencies]
game = {path = "../game"}

matchbox_socket = "0.9.0"
wasm-bindgen-futures = "0.4.29"
futures-timer = { version = "3", features = ["wasm-bindgen"] }

console_error_panic_hook = "0.1.7"
leptonic =  {path = "../lib/leptonic-0.5.0/leptonic", features=["csr"]} # { version = "0.5.0", features = ["csr"] }
leptos = { version = "0.6.5", features = ["csr"] }
leptos_meta = { version = "0.6.5", features = ["csr"] }
leptos_router = { version = "0.6.5", features = ["csr"] }
thiserror = "1.0.56"
tracing = "0.1.40"
# tracing-subscriber = "0.3.18"
tracing-wasm = "0.2.1"

log = "0.4"
serde = { version = "1", features = ["derive"] }
serde_json = {version="1"}
bincode = "1.3.3"
# chrono = {version="0.4.38", features=["serde", "wasmbind"] }
# time = {version="0.3.36", features=["serde"]}
futures = {version="0.3" }
# seahash = "4"

anyhow = "1.0.86"
rand  = "0.8.5" 
uuid = { version = "1.5.0", features = ["v4", "serde"] }
# http = { version = "1.0" }

# leptos client + server
# leptos-struct-table = {version="0.10.2", features=["uuid", "time"]}
# broadcaster = "1"
# lazy_static = "1"
# gloo-net = { git = "https://github.com/rustwasm/gloo" }
# leptos_sse = {version = "0.4.0"}
# serde-wasm-bindgen = "0.6"
# gloo-utils = "0.2.0"
# sqlx = { version = "0.7", features = [
# 	"runtime-tokio-rustls",
# 	"sqlite",
# ], optional = true }
# tracing = "0.1"

# client only
leptos-use = {version="0.10.10"}
# leptos_hotkeys = {path="../lib/leptos-hotkeys-0.2.1/leptos_hotkeys"}s
wasm-bindgen = {version="0.2"}
console_log = {version="1.0"}
stylist = {version="0.13.0", features=["parser"]}
leptos-struct-table = {version = "0.10.2"}
# async-channel = "2.3.1"
# async-broadcast = {path="../lib/async-broadcast-0.7.1"}
async-broadcast = "0.5.1"
js-sys = "0.3.69"
markdown = "1.0.0-alpha.18"

[dependencies.web-sys]
version = "0.3.59"
features = [
#   "AudioContext",
#   "AudioDestinationNode",
#   "AudioWorklet",
#   "AudioWorkletNode",
#   "AudioWorkletNodeOptions",
#   "Blob",
#   "BlobPropertyBag",
#   "Document",
#   "Event",
#   "HtmlInputElement",
#   "HtmlLabelElement",
#   "Url",
#   "Window",  

  'AudioContext',
  'AudioDestinationNode',
  'AudioNode',
  'AudioParam',
  'GainNode',
  'OscillatorNode',
  'OscillatorType',
  "Blob","Url", "BlobPropertyBag"
]

[dev-dependencies]
wasm-bindgen-test = "0.3"

[package.metadata.wasm-pack.profile.dev]
wasm-opt = false

[package.metadata.leptonic]
# REQUIRED: Leptonic's build-script will copy the Leptonic themes to this directory. Relative to your project root.
style-dir = "style"

# REQUIRED: Leptonic's build-script will copy static JS dependencies to this directory. Relative to your project root.
# Leptonic's `<Root>` component expects JS files to be available at a "js" directory at runtime (for dynamic script includes). Specify a different prop value if you choose a non-stadard location here. 
js-dir = "public/js"

[package.metadata.leptos]
