[package]
name = "webapp"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
futures = "0.3"
log = "0.4"
simple_logger = "4.0"
serde = { version = "1", features = ["derive"] }
chrono = {version="0.4.38", features=["serde"] }
time = {version="0.3", features=["serde"]}

thiserror = "1.0"
stylist = {version="0.13.0", features=["parser"]}
anyhow = "1.0.86"
rand  = "0.8.5" 
async-trait = "0.1.80"
uuid = { version = "1.8.0", features = ["v4", "serde"] }
http = { version = "1.0" }

# leptos client + server
leptos = { version = "0.6", features=["nightly"]}
leptos_meta = {version = "0.6", features=["nightly"]}
leptos_router = {version="0.6", features=["csr", "nightly"]}
leptos-struct-table = {version="0.10.2", features=["uuid", "time"]}
leptos-use = "0.10.10"
leptos_hotkeys = {path="../lib/leptos-hotkeys-0.2.1/leptos_hotkeys"}
wasm-bindgen = "0.2"
console_log = "1.0"
console_error_panic_hook = "0.1"
broadcaster = "1"
lazy_static = "1"
once_cell = "1.18"
gloo-net = { git = "https://github.com/rustwasm/gloo" }
leptos_sse = {version = "0.4.0"}

# server only
axum = { version = "0.7", optional = true }
tower = { version = "0.4", optional = true }
leptos_axum = {  version = "0.6", optional = true }
leptos_integration_utils = { version = "0.6", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
tokio = { version = "1", features = ["full"], optional = true }
tower-sessions-sled-store = { path = "../lib/tower-sessions-sled-store-master", optional = true }
tower-sessions =  { version = "0.12.2", optional = true }
axum-login =  { version = "0.15.2", optional = true }
sled = {version="0.34.7", optional = true }
typed-sled = {version="0.2", optional = true }
random_word = { version = "0.4.3", features = ["de"], optional = true}
rand_chacha = "0.3.1"
tokio-stream = { version = "0.1.14", optional = true }
# sqlx = { version = "0.7", features = [
# 	"runtime-tokio-rustls",
# 	"sqlite",
# ], optional = true }

[features]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
ssr = [
	"dep:axum",
	"dep:tower",
	"dep:tower-http",
	"dep:tokio",
	"leptos/ssr",
	"leptos_sse/ssr",
	"leptos_sse/axum",
	"leptos_meta/ssr",
	"leptos_router/ssr",
	"dep:leptos_axum",
	"dep:leptos_integration_utils",
	"leptos-use/ssr",
	"dep:tower-sessions",
	"dep:tower-sessions-sled-store",
	"dep:axum-login",
	"dep:sled",
	"dep:typed-sled",
	"dep:random_word",
	"dep:tokio-stream",
	# "dep:sqlx",
]

[dev-dependencies]
pretty_assertions = "1.4.0"

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]


# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1


[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "webapp"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "./style.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:8080"
# The port to use for automatic reload monitoring
reload-port = 8081
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "cargo make test-ui"
end2end-dir = "e2e"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["csr"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
lib-profile-release = "wasm-release"
